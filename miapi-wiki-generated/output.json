{
  "header": "Wiki for 1.21",
  "description": "  Welcome to the Wiki for Truly Modular 1.21  This Wiki is structured to help Modpack developers/people who want to add/modify content in Truly Modular via Datapacks  It goes in-depth about various Unique things to truly modular, but also over some common Datapack things,  It is aimed at all people  ",
  "java": "",
  "data": {},
  "key_words": [],
  "sub_pages": {
    "data_types": {
      "header": "Data Types",
      "description": "  Data Types are commonly used Types of json encoded data.  Different systems all use these same types, so this is an explanation for the individual types  ",
      "java": "common/src/main/java/smartin/miapi/modules/ModuleDataPropertiesManager.java",
      "data": {},
      "key_words": [
        "DataTypes",
        "datatypes",
        "data_types"
      ],
      "sub_pages": {
        "condition": {
          "header": "Conditions",
          "description": "  Conditions! what is there to describe  ",
          "java": "common/src/main/java/smartin/miapi/modules/conditions/ConditionManager.java",
          "data": {},
          "key_words": [
            "Condition"
          ],
          "sub_pages": {
            "advancement_condition": {
              "header": "Advancement Condition",
              "description": "  this condition checks if the associated player has a specific advancement. This is set to false if there is no associated Player  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/AdvancementCondition.java",
              "data": {
                "type": "advancement",
                "advancement": " the id of the advancement, you can use the /advancement command to get a list of these"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "and_condition": {
              "header": "And Condition",
              "description": "  this condition requires all sub conditions to be true  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/AndCondition.java",
              "data": {
                "type": "and",
                "conditions": "sub Conditions to be checked"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "child_condition": {
              "header": "Child Condition",
              "description": "  this condition moves the context to any direct child module  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/ChildCondition.java",
              "data": {
                "type": "child",
                "condition": "sub Condition to be tested on the child modules"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "is_mod_loaded": {
              "header": "Mod Loaded",
              "description": "  this condition checks if a mod is loaded, you should consider using this as a Load Condition  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/IsModLoadedCondition.java",
              "data": {
                "type": "mod_loaded",
                "mod": "the mod ID to be checked"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "item_in_inventory": {
              "header": "Item in inventory",
              "description": "  this condition checks if a certain amount of a certain item is in a players inventory  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/ItemInInventoryCondition.java",
              "data": {
                "type": "item_in_inventory",
                "item": "Item in the form of an Ingredient",
                "count": "the amount of items needed to be present"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "material": {
              "header": "Material",
              "description": "  this condition checks if this Module has a certain material  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/MaterialCondition.java",
              "data": {
                "type": "material",
                "material": "the material to be checked"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "material_count": {
              "header": "Material Count",
              "description": "  this condition checks if the item has a certain material a certain amount of times  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/MaterialCountCondition.java",
              "data": {
                "type": "material_count",
                "material": "the material to be checked",
                "count": "how often the material is used"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "miapi_perm": {
              "header": "Material Count",
              "description": "  this condition is to check patreon or other types of outside conditions like time of year.  This is mostly used to give patreon subscribers their skins/enable free skins depending on the season  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/MiapiPerm.java",
              "data": {
                "type": "miapi_perm",
                "perm": "a list of perms or UUIDS"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "module": {
              "header": "Module",
              "description": "  this condition if the associated module instance uses this module  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/ModuleTypeCondition.java",
              "data": {
                "type": "module",
                "module": "the id of the module"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "not": {
              "header": "Not",
              "description": "  this condition inverses another condition  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/NotCondition.java",
              "data": {
                "type": "not",
                "condition": "the sub condition to be inversed"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "number": {
              "header": "Number",
              "description": "  this condition inverses another condition  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/NumberCondition.java",
              "data": {
                "type": "number",
                "condition": "a Double Resolvable, if the result is higher than 0 is considered true"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "or_condition": {
              "header": "Or Condition",
              "description": "  this condition requires one sub conditions to be true  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/OrCondition.java",
              "data": {
                "type": "or",
                "conditions": "sub Conditions to be checked"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "other_module": {
              "header": "Other Module",
              "description": "  this condition moves the context to any other module of the item  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/OtherModuleModuleCondition.java",
              "data": {
                "type": "other_module",
                "condition": "sub Condition to be tested on all other modules of the item"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "parent": {
              "header": "Parent Condition",
              "description": "this condition moves the context to the parent module  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/ParentCondition.java",
              "data": {
                "type": "parent",
                "condition": "sub Condition to be tested on the parent module"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "tag": {
              "header": "Tag Condition",
              "description": "this condition checks if the associated module has a specific module tag. Not to be confused with Item Tags  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/TagCondition.java",
              "data": {
                "type": "tag",
                "tag": "the tag to be checked"
              },
              "key_words": [],
              "sub_pages": {}
            },
            "true": {
              "header": "True Condition",
              "description": "this condition is always true  ",
              "java": "common/src/main/java/smartin/miapi/modules/conditions/TrueCondition.java",
              "data": {
                "type": "true"
              },
              "key_words": [],
              "sub_pages": {}
            }
          }
        },
        "properties": {
          "header": "Properties",
          "description": "  Properties are the main way any stat is assigned to anything  They are usually found in an id -> data map like  ``` json  {  \"miapi:fire_proof\":true  }  ```  Note that in this example \"miapi\" can be removed as it is implied if no mod id is set  Most Properties have more complex inner data than a boolean  ",
          "java": "common/src/main/java/smartin/miapi/modules/properties/util/ModuleProperty.java",
          "data": {},
          "key_words": [
            "Properties",
            "moduleProperties"
          ],
          "sub_pages": {
            "armor": {
              "header": "Armor",
              "description": "  Armor Properties are properties specificly made for armor  ",
              "java": "common/src/main/java/smartin/miapi/modules/properties/armor/ArmorFolder.java",
              "data": {},
              "key_words": [],
              "sub_pages": {
                "can_walk_on_snow": {
                  "header": "Snow Walking",
                  "description": "  This Property allows the player to walk over powdered snow  ",
                  "java": "common/src/main/java/smartin/miapi/modules/properties/armor/CanWalkOnSnow.java",
                  "data": {
                    "can_walk_on_snow": "a Boolean Resolvable"
                  },
                  "key_words": [],
                  "sub_pages": {}
                },
                "equipment_slot": {
                  "header": "Equipment Slot",
                  "description": "  It is recommneded to use the correct Item as well as this for better mod compatibility  ",
                  "java": "common/src/main/java/smartin/miapi/modules/properties/armor/EquipmentSlotProperty.java",
                  "data": {
                    "equipment_slot": "the preferred Equipment Slot Group"
                  },
                  "key_words": [],
                  "sub_pages": {}
                },
                "food_exhaustion": {
                  "header": "Exhaustion",
                  "description": "  This property was made for heavy armor, it increases the food exhaustion of the player  ",
                  "java": "common/src/main/java/smartin/miapi/modules/properties/armor/ExhaustionProperty.java",
                  "data": {
                    "food_exhaustion": "a Double Resolvable"
                  },
                  "key_words": [],
                  "sub_pages": {}
                },
                "is_piglin_gold": {
                  "header": "IsPiglinGol",
                  "description": "  This Property allows to set armor pieces as Piglin pacifying like gold is  ",
                  "java": "common/src/main/java/smartin/miapi/modules/properties/armor/IsPiglinGold.java",
                  "data": {
                    "is_piglin_gold": "a Boolean Resolvable"
                  },
                  "key_words": [],
                  "sub_pages": {}
                },
                "pillager_guard": {
                  "header": "PillagesGuard",
                  "description": "  This property allows you to have reduced damage intake from pillagers  /raid related mobs  ",
                  "java": "common/src/main/java/smartin/miapi/modules/properties/armor/PillagesGuard.java",
                  "data": {
                    "pillager_guard": "a Double Resolvable"
                  },
                  "key_words": [],
                  "sub_pages": {}
                },
                "step_noise_cancel": {
                  "header": "Step Canceling",
                  "description": "  This Property cancels the step sounds, this is meant to interact with wardens and sculk sensors  ",
                  "java": "common/src/main/java/smartin/miapi/modules/properties/armor/StepCancelingProperty.java",
                  "data": {
                    "step_noise_cancel": "a Boolean Resolvable"
                  },
                  "key_words": [],
                  "sub_pages": {}
                },
                "water_gravity": {
                  "header": "Water Gravity",
                  "description": "  This property increases Gravity while under water, used to make players sink faster  ",
                  "java": "common/src/main/java/smartin/miapi/modules/properties/armor/WaterGravityProperty.java",
                  "data": {
                    "water_gravity": "a Double Resolvable"
                  },
                  "key_words": [],
                  "sub_pages": {}
                }
              }
            },
            "attributes": {
              "header": "Attributes",
              "description": "  Properties related to attributes  ",
              "java": "common/src/main/java/smartin/miapi/modules/properties/attributes/AttributeFolder.java",
              "data": {},
              "key_words": [],
              "sub_pages": {}
            }
          }
        },
        "boolean_resolvable": {
          "header": "Boolean Resolvable",
          "description": "  This is in concept just like a Double resolvable.  This is regarded true if the outcome is > 0.  false is equivalent to 0, writing true in the json is the same as writing 1  ",
          "java": "common/src/main/java/smartin/miapi/modules/properties/util/ComplexBooleanProperty.java",
          "data": {},
          "key_words": [
            "BooleanResolvable",
            "BooleanResolvable"
          ],
          "sub_pages": {}
        },
        "double_resolvable": {
          "header": "Double Resolvable",
          "description": "this is a complex way to describe a number  in short this number allows you to do math like \"sin(5)\"  but it also allows you to reference certain other numbers, for more information see StatResolver  this allows you to do stuff like \"[material.hardness]*5\" as a number  ",
          "java": "common/src/main/java/smartin/miapi/modules/properties/util/DoubleOperationResolvable.java",
          "data": {},
          "key_words": [
            "DoubleResolvable",
            "DoubleResolvable"
          ],
          "sub_pages": {}
        }
      }
    }
  }
}